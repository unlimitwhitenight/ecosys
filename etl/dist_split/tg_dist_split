#!/bin/bash
#################################################
#provided as it is. Use at your own risk.
################################################

if [ $# -eq 0 ]; then
  echo "This program runs under TigerGraph env. Assume the TigerGraph has n machine nodes, it will split a large file to n splits, and " 
  echo " shuffle each split to each node."
  echo "Note:"
  echo "  - Make sure it's under TigerGraph env. E.g., try command gssh which should lists all the nodes in the cluster"
  echo "  - Make sure local disk is large enough as it will double the current file"
  echo "  - Better to run this in background such in a schreen or nohup session"
  echo "  - Currently only support one file, and it's best to run this script under the directory of that file using relative path"
  echo "  - After the program finishes, you may need to manually delete the local temp folder, called split_SOURCE_FILE"
  echo "Usage: "
  echo " - With 2 arguments, we duplicate original header line to each splits. 3 or more arguments, no duplication"
  echo "  PATH/tg_dist_split filename target_dir" 
  echo "  e.g. generate #(machines) splits to local and remote /data/mysplit dir, each with a header line of abc.csv, "
  echo "       /tool_dir/tg_dist_split abc.csv /data/mysplit" 
  echo " - With 3 arguements, each split doesn't duplcate the header "
  echo "  PATH/tg_dist_split filename target_dir 1"
  echo "  e.g. generate #(machines) splits to local and remote /data/mysplit dir, each without header duplication, "
  echo "       /tool_dir/tg_dist_split abc.csv /data/mysplit 1" 
  exit 0
fi


#check file existence
if [ ! -f $1 ]; then
  echo "$1 not found."
  exit 2
fi

#------------------------------------------------------------------
echo "---------------------------------"
echo "-------- Setup ------------------"
echo "---------------------------------"
src_file_path=$1
tgt_path=$2
number_nodes=$(gssh |grep HostName |wc -l)
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"

echo "Source file  : " $src_file_path
echo "Target dir   : " $tgt_path
echo "# of machines: " $number_nodes

#------------------------------------------------------------------
echo ""
echo "---------------------------------"
echo "-------- Phase 1: split ---------"
echo "---------------------------------"
if [ $# -eq 2 ]; then
  echo $(date +"[%Y-%m-%d %T] ") "Split with header prepended each split"
  $DIR/tgsplit $src_file_path $number_nodes || { echo 'tg_dist_split failed' ; exit 1; }
else
  echo $(date +"[%Y-%m-%d %T] ") "NO header line added to each splits"
  $DIR/tgsplit $src_file_path $number_nodes 1 || { echo 'tg_dist_split failed' ; exit 1; }
fi


#------------------------------------------------------------------
echo ""
echo "---------------------------------"
echo "-------- Phase 2 transer --------"
echo "---------------------------------"
echo $(date +"[%Y-%m-%d %T] ") " start transfer"
$DIR/tgshuffle all "split_$src_file_path"  $tgt_path
